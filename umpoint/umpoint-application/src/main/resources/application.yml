# Tomcat
server:
  tomcat:
    uri-encoding: UTF-8
    threads:
      max: 1000
      min-spare: 30
  port: 8080
  servlet:
    context-path: /api
    session:
      cookie:
        http-only: true

knife4j:
  enable: true
  basic:
    enable: false
    username: admin
    password: admin
  setting:
    enableFooter: false
    language: en

spring:
  # environment dev|test|prod
  profiles:
    active: dev
  messages:
    encoding: UTF-8
    basename: i18n/messages
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true

  data:
    redis:
      database: 0
      host: 192.168.10.10
      port: 6379
      password:
      timeout: 6000ms  # connect timeout
      lettuce:
        pool:
          max-active: 1000
          max-wait: -1ms
          max-idle: 10
          min-idle: 5
  ai:
    azure:
      openai:
        api-key:
        endpoint: https://umpointv2.openai.azure.com/
        chat:
          options:
            deployment-name: gpt-4o-mini
  mail:
    host: smtp.gmail.com
    port: 587
    username:
    password:
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: umpoint
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

# enable redis
renren:
  redis:
    open: false

#mybatis
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  typeAliasesPackage: my.edu.um.umpoint.modules.*.entity
  global-config:
    db-config:
      id-type: ASSIGN_ID
    banner: false
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
  configuration-properties:
    prefix:
    blobType: BLOB
    boolValue: TRUE

#azure
azure:
  storage:
    connection-string:
    container: upload

umpoint:
  booking:
    space:
      find-approve-admin-first: true
    service:
      find-approve-admin-first: true
    accommodation:
      find-approve-admin-first: true
  user:
    permission:
      common:
        - common:upload
      space:
        - space:booking:page
        - space:booking:save
        - space:booking:update
        - space:booking:cancel
      service:
        - service:booking:page
        - service:booking:save
        - service:booking:update
        - service:booking:cancel
      accommodation:
        - accommodation:booking:page
        - accommodation:booking:save
        - accommodation:booking:update
        - accommodation:booking:cancel
      chat:
        - common:ai-chat
        - chat:room:page
        - chat:room:info
        - chat:room:getroom
        - chat:message:view
        - chat:message:save
        - chat:report:save